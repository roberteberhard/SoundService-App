/**
 * Mixins
 */
 @mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

/**
 * White color with alpha opacity
 */
 @function white($opacity) {
    @return rgba(255,255,255,$opacity);
}

/**
 * Black color with alpha opacity
 */
@function black($opacity) {
    @return rgba(0,0,0,$opacity);
}

/**
 * Video Ratio
 */
@mixin video-ratio(){

}


/**
 * Aspect Ratio
 */
@mixin aspect-ratio($arglist... /*$ratio or $width, $height*/){
    $map : keywords($arglist);
    $height: map-get($map, height) or nth-value($arglist, 2);
    $width:  map-get($map, width)  or nth-value($arglist, 1);
    $ratio:  map-get($map, ratio)  or if($width and $height, $width/$height, nth-value($arglist, 1)) or 1;
    $padding: 1/$ratio * 100%;
    &::before, &::after { content: ''; display: table; clear: both; width:1px; margin-left:-1px; }
    &::before { float: left; padding-bottom: $padding; }    
}

// Helper function 
// Return null rather than throwing an error if index is outside list range.    
@function nth-value($list, $index) {
  @return if(length($list) >= $index, nth($list, $index), null);
}    
